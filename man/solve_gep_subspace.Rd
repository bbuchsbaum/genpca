% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gep_subspace.R
\name{solve_gep_subspace}
\alias{solve_gep_subspace}
\title{Fast sub-space solver for a small block of generalized eigen-pairs}
\usage{
solve_gep_subspace(
  S1,
  S2,
  q = 2,
  which = c("largest", "smallest"),
  max_iter = 100,
  tol = 1e-06,
  V0 = NULL,
  seed = NULL,
  reg_S = 0.001,
  reg_T = 1e-06,
  verbose = FALSE
)
}
\arguments{
\item{S1, S2}{Symmetric positive-(semi)definite `dgCMatrix`
(or dense) matrices of the same dimension \eqn{d\times d}.}

\item{q}{Number of eigen-pairs required (`q << d`).}

\item{which}{`"largest"` or `"smallest"`.}

\item{max_iter, tol}{Stopping rule - iteration stops when
`max(abs(lambda_new - lambda_old)/abs(lambda_old)) < tol`.}

\item{V0}{Optional `d x q` initial block (will be orthonormalised).}

\item{seed}{Optional integer seed for reproducible random initialisation.}

\item{reg_S, reg_T}{Ridge terms added to `S1`/`S2` and the small
`q x q` Gram matrix to guarantee invertibility.}

\item{verbose}{Logical - print convergence info.}
}
\value{
A list with components
  \describe{
    \item{values}{length-`q` numeric vector of Ritz eigen-values.}
    \item{vectors}{`d x q` matrix, columns are orthonormal eigen-vectors
                   in the *original* S-inner-product.}
  }
}
\description{
Uses pre-conditioned sub-space iteration on the operator
\eqn{S_2^{-1} S_1} (or its inverse) to obtain the `q`
largest or smallest generalized eigen-values/vectors of
\eqn{S_1 v = \lambda S_2 v}.
}
\keyword{internal}
