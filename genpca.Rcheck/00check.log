* using log directory ‘/Users/bbuchsbaum/code/genpca/genpca.Rcheck’
* using R version 4.3.2 (2023-10-31)
* using platform: aarch64-apple-darwin20 (64-bit)
* R was compiled by
    Apple clang version 14.0.0 (clang-1400.0.29.202)
    GNU Fortran (GCC) 12.2.0
* running under: macOS Sonoma 14.3
* using session charset: UTF-8
* using option ‘--no-manual’
* checking for file ‘genpca/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘genpca’ version ‘0.1.0’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking whether package ‘genpca’ can be installed ... OK
* used C++ compiler: ‘Homebrew clang version 20.1.8’
* used SDK: ‘MacOSX14.2.sdk’
* checking installed package size ... OK
* checking package directory ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... WARNING
transfer:
  function(x, new_data, from, to, opts, ...)
transfer.cross_projector:
  function(x, new_data, from, to, source, target, opts, ...)
See section ‘Generic functions and methods’ in the ‘Writing R
Extensions’ manual.
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
transfer.cross_projector: no visible global function definition for
  ‘getS3method’
Undefined global functions or variables:
  getS3method
Consider adding
  importFrom("utils", "getS3method")
to your NAMESPACE file.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... OK
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking line endings in Makefiles ... OK
* checking compilation flags in Makevars ... OK
* checking for GNU extensions in Makefiles ... OK
* checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ... OK
* checking use of PKG_*FLAGS in Makefiles ... OK
* checking compiled code ... OK
* checking examples ... OK
* checking for unstated dependencies in ‘tests’ ... OK
* checking tests ... ERROR
  Running ‘testthat.R’
Running the tests in ‘tests/testthat.R’ failed.
Last 13 lines of output:
  [9] -0.3230 - -0.6869 ==  0.364
  ── Failure ('test_sfpca.R:29:3'): Rank-1 matrix is recovered correctly ─────────
  `v_est` not equal to `v_true`.
  3/5 mismatches (average diff: 0.705)
  [1] 0.447 -  1.224 == -0.777
  [4] 0.447 -  0.111 ==  0.337
  [5] 0.447 - -0.556 ==  1.003
  ── Failure ('test_sfpca.R:30:3'): Rank-1 matrix is recovered correctly ─────────
  abs(d_est) not equal to abs(as.numeric(crossprod(u_true, X %*% v_true))).
  1/1 mismatches
  [1] 1.3 - 17.4 == -16.1
  
  [ FAIL 34 | WARN 31 | SKIP 1 | PASS 212 ]
  Error: Test failures
  Execution halted
* DONE
Status: 1 ERROR, 1 WARNING, 1 NOTE
